services:
  postgres:
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - gitlab_net

  gitlab:
    image: gitlab/gitlab-ce:latest
    hostname: gitlab
    restart: unless-stopped
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://localhost'
        gitlab_rails['gitlab_shell_ssh_port'] = ${GITLAB_SSH_PORT}
        gitlab_rails['initial_root_password'] = '${GITLAB_ROOT_PASSWORD}'
        gitlab_rails['db_adapter'] = '${DB_ADAPTER}'
        gitlab_rails['db_host'] = '${DB_HOST}'
        gitlab_rails['db_port'] = '${DB_PORT}'
        gitlab_rails['db_database'] = '${DB_DATABASE}'
        gitlab_rails['db_username'] = '${DB_USERNAME}'
        gitlab_rails['db_password'] = '${DB_PASSWORD}'
        gitlab_rails['puma_workers'] = 2
        gitlab_rails['puma_threads_min'] = 1
        gitlab_rails['puma_threads_max'] = 4
        gitlab_rails['puma_phased_restart'] = true
        gitlab_rails['env'] = {
        'MALLOC_ARENA_MAX' => '2',
          'RUBY_GC_HEAP_INIT_SLOTS' => '1000000',
          'RUBY_GC_HEAP_FREE_SLOTS' => '200000'
        }
    ports:
      - "8000:80"
      - "${GITLAB_SSH_PORT}:22"
    volumes:
      - ./data/docker/gitlab/etc/gitlab:/etc/gitlab
      - ./data/docker/gitlab/var/opt/gitlab:/var/opt/gitlab
      - ./data/docker/gitlab/var/log/gitlab:/var/log/gitlab
      - ./data/backups:/var/opt/gitlab/backups
    networks:
      - gitlab_net
    depends_on:
      - postgres

  dind:
    image: docker:20-dind
    restart: always
    privileged: true
    environment:
      DOCKER_TLS_CERTDIR: ""
    command:
      - --storage-driver=overlay2
    volumes:
      - ./data/dind/docker:/var/lib/docker
    networks:
      - gitlab_net
    depends_on:
      - gitlab

  gitlab-runner:
    image: gitlab/gitlab-runner:alpine
    restart: unless-stopped
    environment:
      - DOCKER_HOST=tcp://dind:2375
    volumes:
      - ./config:/etc/gitlab-runner:z
      - ./data/runner/cache:/cache
    networks:
      - gitlab_net
    depends_on:
      - gitlab
      - dind

  register-runner:
    restart: "no"
    image: gitlab/gitlab-runner:alpine
    environment:
      - REGISTRATION_TOKEN=${REGISTRATION_TOKEN}
      - CI_SERVER_URL=${GITLAB_RUNNER_URL}
      - RUNNER_NAME=${RUNNER_NAME}
    command:
      - register
      - --non-interactive
      - --locked=false
      - --name=${RUNNER_NAME}
      - --executor=docker
      - --url=${GITLAB_RUNNER_URL}
      - --clone-url=${GITLAB_RUNNER_URL}
      - --docker-image=docker:20-dind
      - --docker-volumes=/var/lib/docker:/var/lib/docker
    volumes:
      - ./config:/etc/gitlab-runner:z
    networks:
      - gitlab_net
    depends_on:
      - dind
      - gitlab

  backup:
    image: gitlab/gitlab-ce:latest
    restart: unless-stopped
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        gitlab_rails['backup_upload_connection'] = nil
    volumes:
      - ./data/docker/gitlab/etc/gitlab:/etc/gitlab:ro
      - ./data/docker/gitlab/var/opt/gitlab:/var/opt/gitlab:ro
      - ./data/docker/gitlab/var/log/gitlab:/var/log/gitlab
      - ./data/backups:/var/opt/gitlab/backups
    networks:
      - gitlab_net
    command: >
      /bin/sh -c '
      echo "0 2 * * * /opt/gitlab/bin/gitlab-backup create CRON=1" > /etc/crontab &&
      crontab /etc/crontab &&
      cron && tail -f /var/log/gitlab/gitlab-rails/cron.log
      '
    depends_on:
      - gitlab

networks:
  gitlab_net:
    name: gitlab_net